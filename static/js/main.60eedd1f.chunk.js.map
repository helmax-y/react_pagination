{"version":3,"sources":["components/PaginationInfo.js","components/Pagination.js","App.js","index.js"],"names":["PaginationInfo","_ref","total","perPage","page","react_default","a","createElement","className","start","finish","Math","ceil","concat","interspace","Pagination","handleChange","pages","Object","toConsumableArray","Array","keys","components_PaginationInfo","type","onClick","map","currentPage","key","length","App","state","onPageChange","_this","setState","components_Pagination","this","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2MA4BeA,EAzBQ,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,KAYxC,OACEC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAZI,WACjB,IAAMC,GAASL,EAAO,GAAKD,EAAU,EAC/BO,EAAUN,IAASO,KAAKC,KAAKV,EAAQC,GACvCD,EACAE,EAAOD,EAEX,OAAOM,IAAUC,EAAV,GAAAG,OACAJ,EADA,QAAAI,OACYX,GADZ,GAAAW,OAEAJ,EAFA,OAAAI,OAEWH,EAFX,QAAAG,OAEwBX,GAK5BY,KCgDQC,EA7DI,SAAAd,GAA4C,IAAzCC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,QAASC,EAAyBH,EAAzBG,KAAMY,EAAmBf,EAAnBe,aACpCC,EAAKC,OAAAC,EAAA,EAAAD,CAAOE,MAAMT,KAAKC,KAAKV,EAAQC,IAAUkB,QAEpD,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAACe,EAAD,CACEpB,MAAOA,EACPC,QAASA,EACTC,KAAMA,IAERC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLf,UAAU,mBACVgB,QAAS,WACNpB,EAAO,GAAMY,EAAaZ,EAAO,KAJtC,aAWDa,EAAMQ,IAAI,SAAAC,GAAW,OACpBrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,EAAalB,UAAU,oBAC9BH,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLf,UAAWkB,EAAc,IAAMtB,EAC3B,6CACA,mBAEJoB,QAAS,kBAAMR,EAAaU,EAAc,KAEzCA,EAAc,MAKrBrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLf,UAAU,mBACVgB,QAAS,WACNpB,EAAO,GAAKa,EAAMW,QAAWZ,EAAaZ,EAAO,KAJtD,YCjBKyB,6MArBbC,MAAQ,CACN3B,QAAS,EACTuB,YAAa,KAGfK,aAAe,SAACL,GACdM,EAAKC,SAAS,CAAEP,yFAIhB,OACErB,EAAAC,EAAAC,cAAC2B,EAAD,CACEhC,MAAO,GACPC,QAASgC,KAAKL,MAAM3B,QACpBC,KAAM+B,KAAKL,MAAMJ,YACjBV,aAAcmB,KAAKJ,sBAhBTK,IAAMC,WCAxBC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.60eedd1f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PaginationInfo = ({ total, perPage, page }) => {\n  const interspace = () => {\n    const start = (page - 1) * perPage + 1;\n    const finish = (page === Math.ceil(total / perPage))\n      ? total\n      : page * perPage;\n\n    return start === finish\n      ? `${start} of ${total}`\n      : `${start} - ${finish} of ${total}`;\n  };\n\n  return (\n    <p className=\"pagination__info\">\n      {interspace()}\n    </p>\n  );\n};\n\nPaginationInfo.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PaginationInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PaginationInfo from './PaginationInfo';\n\nconst Pagination = ({ total, perPage, page, handleChange }) => {\n  const pages = [...Array(Math.ceil(total / perPage)).keys()];\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        <PaginationInfo\n          total={total}\n          perPage={perPage}\n          page={page}\n        />\n        <li className=\"pagination__item\">\n          <button\n            type=\"button\"\n            className=\"pagination__link\"\n            onClick={() => {\n              (page - 1) && handleChange(page - 1);\n            }}\n          >\n            Previous\n          </button>\n        </li>\n\n        {pages.map(currentPage => (\n          <li key={currentPage} className=\"pagination__item\">\n            <button\n              type=\"button\"\n              className={currentPage + 1 === page\n                ? 'pagination__link pagination__link--current'\n                : 'pagination__link'\n              }\n              onClick={() => handleChange(currentPage + 1)}\n            >\n              {currentPage + 1}\n            </button>\n          </li>\n        ))}\n\n        <li className=\"pagination__item\">\n          <button\n            type=\"button\"\n            className=\"pagination__link\"\n            onClick={() => {\n              (page + 1 <= pages.length) && handleChange(page + 1);\n            }}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.scss';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    perPage: 5,\n    currentPage: 1,\n  }\n\n  onPageChange = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  render() {\n    return (\n      <Pagination\n        total={42}\n        perPage={this.state.perPage}\n        page={this.state.currentPage}\n        handleChange={this.onPageChange}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}